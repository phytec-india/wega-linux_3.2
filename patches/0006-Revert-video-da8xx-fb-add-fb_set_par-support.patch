From 67acc4512dfa4161c67514b3f10e895ba0fc5542 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Teresa=20G=C3=A1mez?= <t.gamez@phytec.de>
Date: Mon, 18 Nov 2013 09:13:41 +0100
Subject: [PATCH 06/16] Revert "video: da8xx-fb: add fb_set_par support"
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This reverts commit 090e823b1ce57f80192195b2526e95b09ac26624.

This patch prevents the working of hdmi, so I revert it for now.

Signed-off-by: Teresa GÃ¡mez <t.gamez@phytec.de>
---
 drivers/video/da8xx-fb.c |   67 +++++++---------------------------------------
 1 file changed, 10 insertions(+), 57 deletions(-)

diff --git a/drivers/video/da8xx-fb.c b/drivers/video/da8xx-fb.c
index 673b2bd2..078272a 100644
--- a/drivers/video/da8xx-fb.c
+++ b/drivers/video/da8xx-fb.c
@@ -363,11 +363,6 @@ static struct da8xx_panel known_lcd_panels[] = {
 	},
 };
 
-static inline bool is_raster_enabled(void)
-{
-	return !!(lcdc_read(LCD_RASTER_CTRL_REG) & LCD_RASTER_ENABLE);
-}
-
 /* Enable the Raster Engine of the LCD Controller */
 static inline void lcd_enable_raster(void)
 {
@@ -775,6 +770,9 @@ static int fb_setcolreg(unsigned regno, unsigned red, unsigned green,
 
 static void lcd_reset(struct da8xx_fb_par *par)
 {
+	/* Disable the Raster if previously Enabled */
+	lcd_disable_raster(NO_WAIT_FOR_FRAME_DONE);
+
 	/* DMA has to be disabled */
 	lcdc_write(0, LCD_DMA_CTRL_REG);
 	lcdc_write(0, LCD_RASTER_CTRL_REG);
@@ -810,6 +808,8 @@ static int lcd_init(struct da8xx_fb_par *par, const struct lcd_ctrl_config *cfg,
 	u32 bpp;
 	int ret = 0;
 
+	lcd_reset(par);
+
 	/* Calculate the divider */
 	lcd_calc_clk_divider(par);
 
@@ -1323,60 +1323,9 @@ static int da8xx_pan_display(struct fb_var_screeninfo *var,
 	return ret;
 }
 
-static int da8xxfb_set_par(struct fb_info *info)
-{
-	struct da8xx_fb_par *par = info->par;
-	struct lcd_ctrl_config *lcd_cfg = par->lcd_cfg;
-	struct da8xx_panel *lcdc_info = par->lcdc_info;
-	unsigned long long pxl_clk = 1000000000000ULL;
-	bool raster;
-	int ret;
-
-	raster = is_raster_enabled();
-
-	lcdc_info->hfp = info->var.right_margin;
-	lcdc_info->hbp = info->var.left_margin;
-	lcdc_info->vfp = info->var.lower_margin;
-	lcdc_info->vbp = info->var.upper_margin;
-	lcdc_info->hsw = info->var.hsync_len;
-	lcdc_info->vsw = info->var.vsync_len;
-	lcdc_info->width = info->var.xres;
-	lcdc_info->height = info->var.yres;
-
-	do_div(pxl_clk, info->var.pixclock);
-	par->pxl_clk = pxl_clk;
-
-	lcd_cfg->bpp = info->var.bits_per_pixel;
-
-	if (raster)
-		lcd_disable_raster(WAIT_FOR_FRAME_DONE);
-	else
-		lcd_disable_raster(NO_WAIT_FOR_FRAME_DONE);
-
-	info->fix.visual = (lcd_cfg->bpp <= 8) ?
-				FB_VISUAL_PSEUDOCOLOR : FB_VISUAL_TRUECOLOR;
-	info->fix.line_length = (lcdc_info->width * lcd_cfg->bpp) / 8;
-
-	par->dma_start = par->vram_phys;
-	par->dma_end   = par->dma_start + lcdc_info->height *
-				info->fix.line_length - 1;
-
-	ret = lcd_init(par, lcd_cfg, lcdc_info);
-	if (ret < 0) {
-		dev_err(par->dev, "lcd init failed\n");
-		return ret;
-	}
-
-	if (raster)
-		lcd_enable_raster();
-
-	return 0;
-}
-
 static struct fb_ops da8xx_fb_ops = {
 	.owner = THIS_MODULE,
 	.fb_check_var = fb_check_var,
-	.fb_set_par = da8xxfb_set_par,
 	.fb_setcolreg = fb_setcolreg,
 	.fb_pan_display = da8xx_pan_display,
 	.fb_ioctl = fb_ioctl,
@@ -1535,7 +1484,11 @@ lcdc_search_end:
 		par->panel_power_ctrl(1);
 	}
 
-	lcd_reset(par);
+	if (lcd_init(par, lcd_cfg, lcdc_info) < 0) {
+		dev_err(&device->dev, "lcd_init failed\n");
+		ret = -EFAULT;
+		goto err_release_fb;
+	}
 
 	/* allocate frame buffer */
 	par->vram_size = lcdc_info->width * lcdc_info->height * lcd_cfg->bpp;
-- 
1.7.9.5

